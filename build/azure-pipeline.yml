trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - src/source/*
    - src/themes/*
    - test/*

pool:
  name: Hosted Windows 2019 with VS2019
  demands:
  - npm
  - msbuild
  - visualstudio

#Your build pipeline references an undefined variable named ‘$BuildDefName’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘$BuildDefName’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘$FinalVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘GitVersion.SemVer’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
variables:
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'release'
  ContentPath : '$(Build.SourcesDirectory)\src\public'

steps:
- checkout: self
  clean: true
  submodules: true
  
- task: gittools.gitversion-preview.gitversion-task.GitVersion@5
  displayName: GitVersion
  inputs:
    runtime: full
    preferBundledVersion: false
    configFilePath: GitVersion.yml

- task: petergroenewegen.PeterGroenewegen-Xpirit-Vsts-Build-InlinePowershell.Xpirit-Vsts-Build-InlinePowershell.InlinePowershell@1
  displayName: 'Rename the Build to include the version number'
  inputs:
    Script: |
     Param(
        $FinalVersion
     )
     
     [string] $BuildDefName = "$env:BUILD_DEFINITIONNAME"
     
     Write-Host "##vso[build.updatebuildnumber]$($BuildDefName)_v$($FinalVersion)"
    ScriptArguments: '-FinalVersion $(GitVersion.SemVer)'

- task: UniversalPackages@0
  displayName: 'download hexo node_modules'
  inputs:
    downloadDirectory: '$(System.DefaultWorkingDirectory)\node_modules'
    vstsFeed: 'e6dffc65-5baa-4671-b51a-db24b7afdd56'
    vstsFeedPackage: '76b9a807-7777-40e9-a8e2-b888d0505dfd'
    vstsPackageVersion: 1.1.0

- task: Npm@1
  displayName: 'npm install'
  inputs:
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false

- task: Npm@1
  displayName: 'Install hexo-generator-feed'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: 'install hexo-generator-feed --save'

- task: NuGetCommand@2
  displayName: 'NuGet restore'

- task: VSBuild@1
  displayName: 'Build solution **\*.sln'
  inputs:
    vsVersion: 14.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: DeleteFiles@1
  displayName: 'Delete files from public'
  inputs:
    SourceFolder: public
    Contents: '**'

- task: whitesource.ws-bolt.bolt.wss.WhiteSource Bolt@19
  displayName: 'WhiteSource Bolt'
  inputs:
    cwd: '$(Build.SourcesDirectory)\src'

- task: CmdLine@1
  displayName: 'Run the Hexo Generate command'
  inputs:
    filename: '..\node_modules\.bin\hexo'
    arguments: 'generate'
    workingFolder: '$(Build.SourcesDirectory)\src'

- task: ArchiveFiles@2
  displayName: 'Archive $(contentPath)'
  inputs:
    rootFolderOrFile: '$(contentPath)'
    includeRootFolder: false
    archiveFile: '$(Agent.BuildDirectory)\b\Publish.zip'
    verbose: true

- task: CopyFiles@2
  displayName: 'Copy the tests to staging'
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)\s\test\BlogUITests\bin\$(BuildConfiguration)'
    Contents: '**'
    TargetFolder: '$(Agent.BuildDirectory)\b\Tests'
    flattenFolders: true

- task: chwebdude.badge-creator.custom-build-task.badge-creator@1
  displayName: 'Create Badge'
  inputs:
    nameString: Blog
    versionString: '$(GitVersion.SemVer)'
    destinationPath: '$(Build.ArtifactStagingDirectory)\blog.svg'  
    color: blue
    style: flat

- task: AzureFileCopy@2
  displayName: 'AzureBlob File Copy'
  inputs:
    SourcePath: '$(Build.ArtifactStagingDirectory)\blog.svg'
    azureSubscription: '2019-01-08_MSDN_Subscription'
    Destination: AzureBlob
    storage: msdtlvm967694675
    ContainerName: badges 

- task: CopyPublishBuildArtifacts@1
  displayName: 'Copy Publish Artifact: drop'
  inputs:
    CopyRoot: '$(Agent.BuildDirectory)\b'
    Contents: '**'
    ArtifactName: drop
    ArtifactType: Container
